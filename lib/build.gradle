plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

def mVersion = System.getenv("VERSION")

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName mVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

def pomConfig = {

    licenses {
        license {
            name "MIT License"
            url "https://github.com/MrNinso/BaseUtils/blob/master/LICENSE"
            distribution "repo"
        }
    }

    developers {
        developer {
            id "developer3"
            name "DeveloperÂ³"
            email "jheison540as@gmail.com"
        }
    }

    scm {
        connection "scm:git://github.com/MrNinso/BaseUtils.git"
        developerConnection "scm:git://github.com/MrNinso/BaseUtils.git"
        url "git://github.com/MrNinso/BaseUtils.git"
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sourcesJar")
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

javadoc.failOnError(false)
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier.set("javadoc")
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        release(MavenPublication) {
            groupId 'com.developer3'
            artifactId 'BaseUtils'
            version mVersion

            artifact("$buildDir/outputs/aar/lib-release.aar")
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                def root = asNode()
                root.appendNode('description', 'BaseUtils is a toolbox to help you interact with the android system and codeless.')
                root.appendNode('name', 'BaseUtils')
                root.appendNode('url', 'https://github.com/MrNinso/BaseUtils')
                root.children().last() + pomConfig
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    logger.log(LogLevel.ERROR,"allDependencies.each:====>"+it.toString()+"\n")

                    if (it.name != 'unspecified') {
                        logger.log(LogLevel.ERROR,"allDependencies.each: !unspecified: "+it.name+"\n")
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('USERNAME')
    key = System.getenv('TOKEN')

    publications = ['release']
    configurations = ['archives']

    pkg {
        repo = 'com.developer3.libs'
        name = 'BaseUtils'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/MrNinso/BaseUtils.git'
        version {
            name = mVersion
            desc = mVersion
            released = new Date()
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
            gpg{
                sign = true
            }
        }
    }

    publish = true
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'

    testImplementation 'junit:junit:4.13'
    testImplementation 'org.robolectric:robolectric:4.0' //TODO
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
